name: Draft Release Approval
# test 2
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      driver:
        description: "Driver to build"
        required: true
      version:
        description: "Version to release"
        required: true

jobs:
  build_all_drivers:
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/staging')
    name: Build and Release Drivers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        driver: [mongodb] # Add new drivers here as they become available
    env:
      DOCKER_LOGIN: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      DHID: ${{ secrets.DOCKER_REPO || 'olakego' }}
      DRIVER: ${{ github.event.inputs.driver || matrix.driver }}
      VERSION: ${{ github.event.inputs.version || github.event.release.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Show directory structure
        run: |
          echo "Current directory structure:"
          ls -R writers/
          
      - name: Build JAR
        run: |
          echo "Current directory: $(pwd)"
          cd writers/iceberg/debezium-server-iceberg-sink
          echo "Building in directory: $(pwd)"
          ls -la
          ./mvnw clean package -DskipTests
          echo "After build, directory contents:"
          ls -la target/
          
      - name: Verify JAR exists
        run: |
          JAR_PATH="writers/iceberg/debezium-server-iceberg-sink/target/debezium-server-iceberg-sink-0.0.1-SNAPSHOT.jar"
          echo "Looking for JAR at: $JAR_PATH"
          if [ ! -f "$JAR_PATH" ]; then
            echo "Error: JAR file not found at $JAR_PATH"
            echo "Directory contents:"
            ls -R writers/iceberg/debezium-server-iceberg-sink/target/
            exit 1
          fi
          echo "JAR file found successfully at $JAR_PATH"
          ls -l "$JAR_PATH"
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_LOGIN }}
          password: ${{ env.DOCKER_PASSWORD }}
          
      - name: Set Driver 
        run: echo "DRIVER=${{ env.DRIVER }}" >> $GITHUB_ENV
        
      - name: Set VERSION
        run: echo "VERSION=${{ env.VERSION }}" >> $GITHUB_ENV
        
      - name: Validate VERSION
        run: |
          if [ -z "$VERSION" ]; then
            echo "Error: VERSION is empty"
            exit 1
          fi
          echo "Using version: $VERSION"
        
      - name: Show VERSION
        run: echo "Building driver $DRIVER with version $VERSION"
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          build-args: |
            DRIVER_NAME=${{ env.DRIVER }}
            DRIVER_VERSION=${{ env.VERSION }}
          tags: |
            ${{ env.DHID }}/source-${{ env.DRIVER }}:${{ env.VERSION }}
          platforms: linux/amd64,linux/arm64
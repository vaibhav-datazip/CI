name: Olake Draft Release and Changelog

on:
  pull_request:
    branches:
    - staging

jobs:
  create_draft_release:
    if: github.event.pull_request.base.ref == 'staging'
    name: Create Draft Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get latest release
        id: latest-release
        run: |
          latest_tag=$(git tag -l | tail -1)
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
        
      - name: Generate next version
        id: generate-next-version
        run: |
          echo "Debug: LATEST_TAG = $LATEST_TAG"
          
          if [ -z "$LATEST_TAG" ]; then
            echo "Debug: No latest tag found, using v0.0.0"
            next_version="v0.0.0"
          else
            # Remove 'v' prefix and split version into array
            version=${LATEST_TAG#v}
            echo "Debug: Version without 'v' = $version"
            
            IFS='.' read -ra VERSION_PARTS <<< "$version"
            echo "Debug: Version parts = ${VERSION_PARTS[@]}"
            echo "Debug: Number of parts = ${#VERSION_PARTS[@]}"
            
            # Check if we have all three version parts
            if [ ${#VERSION_PARTS[@]} -eq 3 ]; then
              echo "Debug: Valid version format, incrementing patch"
              # Increment the last number (patch version)
              ((VERSION_PARTS[2]++))
              echo "Debug: After increment = ${VERSION_PARTS[2]}"
              # Reconstruct the version with 'v' prefix
              next_version="v${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.${VERSION_PARTS[2]}"
              echo "Debug: Next version = $next_version"
            else
              echo "Debug: Invalid version format, using v0.0.0"
              next_version="v0.0.0"
            fi
          fi
          echo "Debug: Final next_version = $next_version"
          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV

      - name: Create draft release
        id: create-draft-release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.NEXT_VERSION }}
          generateReleaseNotes: true
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
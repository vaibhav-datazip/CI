name: Olake Draft Release and Changelog

on:
  pull_request:
    branches:
    - staging

jobs:
  create_draft_release:
    if: github.event.pull_request.base.ref == 'staging'
    name: Create Draft Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get latest release
        id: latest-release
        run: |
          latest_tag=$(git tag -l | tail -1)
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV
        
      - name: Generate next version
        id: generate-next-version
        run: |
          echo "Debug: LATEST_TAG = $LATEST_TAG"
          
          if [ -z "$LATEST_TAG" ]; then
            echo "Debug: No latest tag found, using v0.0.0"
            next_version="v0.0.0"
          else
            # Remove 'v' prefix and split version into array
            version=${LATEST_TAG#v}
            echo "Debug: Version without 'v' = $version"
            
            # Get raw version parts first
            raw_major=$(echo $version | cut -d. -f1)
            raw_minor=$(echo $version | cut -d. -f2)
            raw_patch=$(echo $version | cut -d. -f3)
            
            echo "Debug: Raw version parts = $raw_major $raw_minor $raw_patch"
            echo "Debug: Raw patch type: $(declare -p raw_patch)"
            
            # Try increment without conversion
            echo "Debug: Trying increment without conversion:"
            echo "Debug: raw_patch + 1 = $((raw_patch + 1))"
            
            # Now convert to integers
            major=$(printf "%d" $raw_major)
            minor=$(printf "%d" $raw_minor)
            patch=$(printf "%d" $raw_patch)
            
            echo "Debug: Converted version parts = $major $minor $patch"
            echo "Debug: Converted patch type: $(declare -p patch)"
            
            # Increment patch version
            patch=$((patch + 1))
            echo "Debug: After increment = $patch"
            
            # Create next version
            next_version="v$major.$minor.$patch"
            echo "Debug: Next version = $next_version"
          fi
          
          echo "Debug: Final next_version = $next_version"
          echo "NEXT_VERSION=$next_version" >> $GITHUB_ENV

      - name: Create draft release
        id: create-draft-release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.NEXT_VERSION }}
          generateReleaseNotes: true
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}